<?php
namespace cfd\doc\controllers;
use cfd\doc\components\DocObject;
use cfd\doc\components\Route;
use yii\web\Controller;
use yii\web\Response;

/**
 * Created by PhpStorm.
 * User: chatfeed
 * Date: 2018/1/5
 * Time: 下午1:54
 */

/**
 * Class DefaultController
 * @package cfd\doc\controllers
 */
class DefaultController extends Controller{

    public function init()
    {
        if(YII_ENV==='prod'){
            die('access denied,required YII_ENV==dev');
        }
        parent::init(); // TODO: Change the autogenerated stub
    }
    public function actionIndex(){
        $version  = \Yii::$app->request->get('v',1);
        $this->layout = false;
        $model = new Route();
        $routes =  $model->getRoutes();
        // var_dump($routes['objectlist']['address_info']);exit;

        $objects = isset($routes['objectlist'])?$routes['objectlist']:[];
        unset($routes['objectlist'],$routes['/route/*'],$routes['/*']);
        $routes = array_reverse($routes);
        $objects = array_reverse($objects);
        $objects = \Yii::$app->getModule('doc')->modelDescriptions;
        $docObject = new DocObject($objects);
        $result = [];
        $tmp = [];
        foreach($routes as $id=>$r){
            if(is_string($r)) continue;//过滤模型

            if(isset($r['name'])){
                if(!empty($tmp)){
                    $result[] = $tmp;
                }
                $tmp = ['id'=>$id,'name'=>$r['name'],'children'=>[]];
            }else{
                if(!isset($r['version'])) $r['version'] = 0;
                //过滤空的description
                if($r['description']=='') continue;
                if($version && $version!=$r['version']) continue;
//                if(strpos($id,'/v3')===false && strpos($r['description'],'#v3')===false) continue;
                $tmp['children'][]  = $r;
            }
        }
        if(!empty($tmp)){
            $result[] = $tmp;
        }
        \Yii::$app->response->format = Response::FORMAT_HTML;
        return $this->render('index',[
            'routes'=>$result,
            'docObject'=>$docObject,
            'objects'=>$objects
        ]);
    }

    public function actionPostmanJson(){
        $this->layout = false;
        $model = new Route();
        $routes =  $model->getRoutes();
        unset($routes['objectlist'],$routes['/route/*'],$routes['/*']);
        $routes = array_reverse($routes);
        $i=-1;
        $item = [];
        foreach ($routes as $k=>$route){
            if(is_string($route)) continue;//过滤模型
            if(count($route)<=1 && isset($route['name'])){
                $i++;
                $item[$i] =[
                    'name'=>trim($route['name']),
                    'description'=>'',
                    'item'=>[],
                ];
                continue;
            }
            $item[$i]['item'][] = [
                'name'=>trim($route['description']),
                'request'=>[
                    'url'=>'{{domain}}'.$k,
                    'method'=>"POST",
                    'header'=>[],
                    'body'=>[
                        'mode'=>'formdata',
                        'formdata'=>$this->formdata($route['request']),
                    ]
                ]
            ];
        }
        $ret = [
            'variables'=>[],
            'info'=>[
                'name'=>\Yii::$app->params['name'],
                '_postman_id'=>'9ca70c83-e90a-7cf4-e725-e1c1ccd23592',
                'description'=>'',
                'schema'=>'https://schema.getpostman.com/json/collection/v2.0.0/collection.json',
            ],
            'item'=>$item
        ];
        return $ret;
    }

    protected function formdata($request){
        $ret = [];
        foreach($request as $item){
            if($item['type']=='urlparam') continue;
            $ret[] = [
                'key'=>$item['name'],
                'value'=>$item['desc'],
                'type'=>($item['type']=='file')?'file':'text',
                'enabled'=>true,
                'warning'=>'',
            ];
        }
        return $ret;
    }
}
